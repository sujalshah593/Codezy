const DsaVideos = [
  {
    id: "d1",
    title:
      "Lecture 1 : Flowchart & Pseudocode + Installation | DSA Series by Shradha Khapra Ma'am | C++ ",
    url: "https://www.youtube.com/embed/VTLCoHnyACE",
    category: "dsa",
    time: "01:25:52",
  },
  {
    id: "d2",
    title:
      "Lecture 2 : Variable, Data Types & Operators | DSA Series by Shradha Ma'am | C++",
    url: "https://www.youtube.com/embed/Dxu7GKtdbnA",
    category: "dsa",
    time: "01:16:43",
  },
  {
    id: "d3",
    title:
      "Lecture 3: Conditional Statements & Loops | DSA Series by Shradha Ma'am | C++",
    url: "https://www.youtube.com/embed/qR9U6bKxJ7g",
    category: "dsa",
    time: "01:38:42",
  },
  {
    id: "d4",
    title: "Lecture 4: Patterns | DSA Series by Shradha Khapra Ma'am | C++",
    url: "https://www.youtube.com/embed/rga_q2N7vU8",
    category: "dsa",
    time: "01:31:06",
  },
  {
    id: "d5",
    title: "Lecture 5: Functions | DSA Series by Shradha Khapra Ma'am | C++",
    url: "https://www.youtube.com/embed/P08Z_NC8GuY",
    category: "dsa",
    time: "49:12",
  },
  {
    id: "d6",
    title: "Binary Number System | DSA Series by Shradha Khapra Ma'am | C++",
    url: "https://www.youtube.com/embed/xpy5NXiBFvA",
    category: "dsa",
    time: "37:19",
  },
  {
    id: "d7",
    title:
      "Bitwise Operators, Data Type Modifiers & more | DSA Series by Shradha Khapra Ma'am | C++",
    url: "https://www.youtube.com/embed/r-u4uh3QvsQ",
    category: "dsa",
    time: "38:32",
  },
  {
    id: "d8",
    title:
      "Array Data Structure - Part1 | DSA Series by Shradha Khapra Ma'am | C++",
    url: "https://www.youtube.com/embed/8wmn7k1TTcI",
    category: "dsa",
    time: "54:06",
  },
  {
    id: "d9",
    title:
      "Vectors in C++ | Arrays Part 2 | DSA Series by Shradha Ma'am | Lecture 9",
    url: "https://www.youtube.com/embed/NWg38xWYzEg",
    category: "dsa",
    time: "40:05",
  },
  {
    id: "d10",
    title:
      "Kadane's Algorithm | Maximum Subarray Sum | DSA Series by Shradha Ma'am",
    url: "https://www.youtube.com/embed/9IZYqostl2M",
    category: "dsa",
    time: "23:28",
  },
  {
    id: "d11",
    title:
      "Majority Element | Brute- Better-Best Approach | Moore's Voting Algorithm | & Pair Sum",
    url: "https://www.youtube.com/embed/_xqIp2rj8bo",
    category: "dsa",
    time: "39:10",
  },
  {
    id: "d12",
    title: "Time & Space Complexity - DSA Series by Shradha Ma'am",
    url: "https://www.youtube.com/embed/PwKv8fOcriM",
    category: "dsa",
    time: "01:25:40",
  },
  {
    id: "d13",
    title:
      "Buy and Sell Stock Problem and Pow(X,N) Power exponential Problem - Leetcode | DSA Series",
    url: "https://www.youtube.com/embed/WBzZCm46mFo",
    category: "dsa",
    time: "29:09",
  },
  {
    id: "d14",
    title:
      "Container with Most Water Problem | Brute & Optimal Solution | Two Pointer Approach - Leetcode 11",
    url: "https://www.youtube.com/embed/EbkMABpP52U",
    category: "dsa",
    time: "31:59",
  },
  {
    id: "d15",
    title:
      "Product of Array Except Self | Brute to Optimal Solution | Leetcode 238",
    url: "https://www.youtube.com/embed/TW2m8m_FNJE",
    category: "dsa",
    time: "29:29",
  },
  {
    id: "d16",
    title: "Pointers in C++ | In Detail | DSA Series by Shradha Ma'am",
    url: "https://www.youtube.com/embed/qYEjR6M0wSk",
    category: "dsa",
    time: "46:07",
  },
  {
    id: "d17",
    title:
      "Binary Search Algorithm - Iterative and Recursive Method | [Theory + Code] with Example",
    url: "https://www.youtube.com/embed/TbbSJrY5GqQ",
    category: "dsa",
    time: "44:15",
  },
  {
    id: "d18",
    title: "Search in Rotated Sorted Array | Binary Search | Leetcode 33",
    url: "https://www.youtube.com/embed/6WNZQBHWQJs",
    category: "dsa",
    time: "19:29",
  },
  {
    id: "d19",
    title: "Peak Index in Mountain Array | Binary Search | Leetcode 852",
    url: "https://www.youtube.com/embed/RjxD6UXGlhc",
    category: "dsa",
    time: "23:33",
  },
  {
    id: "d20",
    title:
      "Single Element in Sorted Array | Binary Search | DSA Series Lecture 20",
    url: "https://www.youtube.com/embed/qsbCBduIs40",
    category: "dsa",
    time: "27:32",
  },
  {
    id: "d21",
    title:
      "Book Allocation or Allocate Books Problem | DSA Series - Binary Search",
    url: "https://www.youtube.com/embed/JRAByolWqhw",
    category: "dsa",
    time: "32:58",
  },
  {
    id: "d22",
    title:
      "Painter's Partition Problem | DSA Placement Series - Binary Search | Lecture 22",
    url: "https://www.youtube.com/embed/srsFN5OHBgw",
    category: "dsa",
    time: "27:43",
  },
  {
    id: "d23",
    title:
      "Aggressive Cows Problem | DSA Placement Series - Binary Search | Lecture 23",
    url: "https://www.youtube.com/embed/7wOzDqsfXy0",
    category: "dsa",
    time: "30:11",
  },
  {
    id: "d24",
    title:
      "Sorting Algorithms | Bubble Sort, Selection Sort & Insertion Sort | DSA Series by Shradha Ma'am",
    url: "https://www.youtube.com/embed/1jCFUv-Xlqo",
    category: "dsa",
    time: "34:32",
  },
  {
    id: "d25",
    title:
      "Lecture 25 : Binary Search Trees (BST) | DSA Series by Shradha Khapra Ma'am | C++",
    url: "https://www.youtube.com/embed/J48aGjfjYTI",
    category: "dsa",
    time: "33:38",
  },
  {
    id: "d26",
    title:
      "Merge Sorted Arrays Problem and Next Permutation Problem | DSA Series",
    url: "https://www.youtube.com/embed/-1cLK6PaLsQ",
    category: "dsa",
    time: "43:48",
  },
  {
    id: "d27",
    title: "C++ STL Complete Tutorial | Standard Template Library - One Shot",
    url: "https://www.youtube.com/embed/okhdtEk1iKk",
    category: "dsa",
    time: "01:27:19",
  },
  {
    id: "d28",
    title:
      "How to setup C++ compiler on Mac ? | Software Installation for Mac users",
    url: "https://www.youtube.com/embed/varXreLWPRo",
    category: "dsa",
    time: "01:40",
  },
  {
    id: "d29",
    title: "Strings & Character Arrays in C++ - Part 1 | DSA Placement Series",
    url: "https://www.youtube.com/embed/MOSjYaVymcU",
    category: "dsa",
    time: "30:02",
  },
  {
    id: "d30",
    title:
      "Valid Palindrome & Remove all Occurrences | Strings Part 2 | DSA Placement Series",
    url: "https://www.youtube.com/embed/dSRFgEs3a6A",
    category: "dsa",
    time: "24:01",
  },
  {
    id: "d31",
    title: "Strings - Part 3 | Permutation in String | DSA Placement Series",
    url: "https://www.youtube.com/embed/VXewy91P0S4",
    category: "dsa",
    time: "21:40",
  },
  {
    id: "d32",
    title: "Strings - Part 4 | Reverse Words in String | DSA Placement Series",
    url: "https://www.youtube.com/embed/RitppzIdMCo",
    category: "dsa",
    time: "14:41",
  },
  {
    id: "d33",
    title: "String Compression problem - Lecture 32 | Leetcode 443",
    url: "https://www.youtube.com/embed/cAB15h6-sWA",
    category: "dsa",
    time: "19:28",
  },
  {
    id: "d34",
    title:
      "Maths for DSA - One Shot | Euclid's Algorithm | Sieve of Eratosthenes | Modular Arithmetics",
    url: "https://www.youtube.com/embed/Y4KdgqV1IqA",
    category: "dsa",
    time: "55:47",
  },
  {
    id: "d35",
    title: "2D Arrays in C++ | Part 1 | DSA Series by Shradha Ma'am",
    url: "https://www.youtube.com/embed/lBL8327gq8I",
    category: "dsa",
    time: "37:30",
  },
  {
    id: "d36",
    title:
      "Search a 2D Matrix - Variation I & II | 2D Arrays - Part 2 | DSA Series by Shradha Ma'am",
    url: "https://www.youtube.com/embed/LEFFjgt5i6w",
    category: "dsa",
    time: "37:42",
  },
  {
    id: "d37",
    title:
      "Spiral Matrix | 2D Arrays - Part 3 | Leetcode 54 | DSA Series by Shradha Ma'am",
    url: "https://www.youtube.com/embed/XMpdvwUObho",
    category: "dsa",
    time: "24:32",
  },
  {
    id: "d38",
    title:
      "Two Sum | Find Duplicate | Find Repeating & Missing Values | Hashing Problems",
    url: "https://www.youtube.com/embed/0Fxc_jKj2vo",
    category: "dsa",
    time: "53:29",
  },
  {
    id: "d39",
    title:
      "3 Sum | Brute, Better & Optimized Approach with Codes | Leetcode 15",
    url: "https://www.youtube.com/embed/K-RsltkN63w",
    category: "dsa",
    time: "43:41",
  },
  {
    id: "d40",
    title: "4 Sum Problem | Optimal Approach | DSA Series by Shradha Ma'am",
    url: "https://www.youtube.com/embed/X6sL8JTROLY",
    category: "dsa",
    time: "23:01",
  },
  {
    id: "d41",
    title: "Subarray Sum Equals K | Brute-Better-Optimal approach",
    url: "https://www.youtube.com/embed/KDH4mhFVvHw",
    category: "dsa",
    time: "34:44",
  },
  {
    id: "d42",
    title: "Recursion Tutorial - Basics to Advanced | Part 1",
    url: "https://www.youtube.com/embed/9OsMG4fI4OY",
    category: "dsa",
    time: "46:21",
  },
  {
    id: "d43",
    title:
      "Recursion Part 2 : Fibonacci numbers problem, Binary search problem, Find if array sorted problem",
    url: "https://www.youtube.com/embed/4iT-GhvSKzc",
    category: "dsa",
    time: "41:29",
  },
  {
    id: "d44",
    title:
      "Recursion Part 3 : Backtracking in Detail | Print all Subsets | Subsets II",
    url: "https://www.youtube.com/embed/pNzljlzDCiI",
    category: "dsa",
    time: "42:19",
  },
  {
    id: "d45",
    title: "Permutations of an Array/String | Recursion & Backtracking",
    url: "https://www.youtube.com/embed/N4gJDGdhpLw",
    category: "dsa",
    time: "22:54",
  },
  {
    id: "d46",
    title: "N-Queens Problem | using Backtracking | Leetcode Hard",
    url: "https://www.youtube.com/embed/BdSJnIdR-4s",
    category: "dsa",
    time: "24:25",
  },
  {
    id: "d47",
    title: "Sudoku Solver Problem | using Backtracking | Leetcode Hard",
    url: "https://www.youtube.com/embed/70cP3qtJp-s",
    category: "dsa",
    time: "26:57",
  },
  {
    id: "d48",
    title: "Rat in a Maze Problem | Backtracking",
    url: "https://www.youtube.com/embed/D8Yze9CDDAw",
    category: "dsa",
    time: "32:44",
  },
  {
    id: "d49",
    title: "Combination Sum Problem | Recursion & Backtracking",
    url: "https://www.youtube.com/embed/jkgZw2WEaqA",
    category: "dsa",
    time: "23:24",
  },
  {
    id: "d50",
    title: "Palindrome Partitioning Problem | Recursion & Backtracking",
    url: "https://www.youtube.com/embed/aZ0B1eWkSVU",
    category: "dsa",
    time: "24:43",
  },
  {
    id: "d51",
    title: "Merge Sort Algorithm | Recursion & Backtracking",
    url: "https://www.youtube.com/embed/cQDtOBTy7_Y",
    category: "dsa",
    time: "32:03",
  },
  {
    id: "d52",
    title: "One Major update & reaching 1000M views",
    url: "https://www.youtube.com/embed/SBQfXK7q5K4",
    category: "dsa",
    time: "03:49",
  },
  {
    id: "d53",
    title: "Quick Sort Algorithm - Lecture 51 of Complete DSA Placement Series",
    url: "https://www.youtube.com/embed/8MNB0Mba_Dc",
    category: "dsa",
    time: "26:22",
  },
  {
    id: "d54",
    title: "Count Inversions Problem | Brute and Optimal",
    url: "https://www.youtube.com/embed/ynnWDBTdVi0",
    category: "dsa",
    time: "24:32",
  },
  {
    id: "d55",
    title: "KNIGHTS TOUR Problem - Backtracking | Leetcode 2596",
    url: "https://www.youtube.com/embed/Sp1jzttFVdE",
    category: "dsa",
    time: "22:31",
  },
  {
    id: "d56",
    title:
      "OOPs Tutorial in One Shot | Object Oriented Programming | in C++ Language | for Placement Interviews",
    url: "https://www.youtube.com/embed/mlIUKyZIUUU",
    category: "dsa",
    time: "02:04:22",
  },
  {
    id: "d57",
    title: "Introduction to Linked List | Data Structures & Algorithms",
    url: "https://www.youtube.com/embed/LyuuqCVkP5I",
    category: "dsa",
    time: "50:42",
  },
  {
    id: "d58",
    title: "Reverse a Linked List | DSA Series ",
    url: "https://www.youtube.com/embed/R-CKBYnOv1U",
    category: "dsa",
    time: "10:28",
  },
  {
    id: "d59",
    title: "Middle of a Linked List | DSA Series ",
    url: "https://www.youtube.com/embed/nzaHG0dme4g",
    category: "dsa",
    time: "10:31",
  },
  {
    id: "d60",
    title: "Detect & Remove Cycle in Linked List | DSA Series ",
    url: "https://www.youtube.com/embed/-1E8ZMS0gSs",
    category: "dsa",
    time: "30:23    ",
  },
  {
    id: "d61",
    title: "Merge Two Sorted Lists | DSA Series ",
    url: "https://www.youtube.com/embed/f8RPIb-0DDE",
    category: "dsa",
    time: "12:40",
  },
  {
    id: "d62",
    title: "Copy List with Random Pointer | DSA Series ",
    url: "https://www.youtube.com/embed/8ze7Zopdsaw",
    category: "dsa",
    time: "20:51",
  },
  {
    id: "d63",
    title: "Doubly Linked List Tutorial",
    url: "https://www.youtube.com/embed/bO5DasTsaRQ",
    category: "dsa",
    time: "32:15",
  },
  {
    id: "d64",
    title: "Circular Linked List in Data Structures",
    url: "https://www.youtube.com/embed/e6lZY5Yha8U",
    category: "dsa",
    time: "33:55",
  },
  {
    id: "d65",
    title: "Flatten a Doubly Linked List | Leetcode 430 | DSA Series",
    url: "https://www.youtube.com/embed/I8b0rff5F9M",
    category: "dsa",
    time: "24:46",
  },
  {
    id: "d66",
    title: "Reverse Nodes in K-Group | Linked List",
    url: "https://www.youtube.com/embed/-swgIiMIlJo",
    category: "dsa",
    time: "20:38",
  },
  {
    id: "d67",
    title: "Swap Nodes in Pairs | Linked List",
    url: "https://www.youtube.com/embed/wwbTMNVlFHQ",
    category: "dsa",
    time: "20:05",
  },
  {
    id: "d68",
    title: "Introduction to STACKS | Data Structures & Algorithms | Lecture 66",
    url: "https://www.youtube.com/embed/0X-fV-1ir9c",
    category: "dsa",
    time: "22:10",
  },
  {
    id: "d69",
    title: "Valid Parentheses | Stack | Lecture 67",
    url: "https://www.youtube.com/embed/NlHupEeDXzY",
    category: "dsa",
    time: "16:24",
  },
  {
    id: "d70",
    title: "Stock Span Problem | Optimal Solution",
    url: "https://www.youtube.com/embed/01vBuZyMfqk",
    category: "dsa",
    time: "26:28",
  },
  {
    id: "d71",
    title: "Next Greater Element | Optimal Solution & Code",
    url: "https://www.youtube.com/embed/NKbExYwvjb0",
    category: "dsa",
    time: "23:31",
  },
  {
    id: "d72",
    title: "Previous Smaller Element | Optimal Solution & Code",
    url: "https://www.youtube.com/embed/WnjUfBn9nZM",
    category: "dsa",
    time: "09:23",
  },
  {
    id: "d73",
    title: "Design a Min Stack | Optimal Solution & Code",
    url: "https://www.youtube.com/embed/wHDm-N2m2XY",
    category: "dsa",
    time: "24:33",
  },
  {
    id: "d74",
    title: "Largest Rectangle in Histogram | Best Solution & Code",
    url: "https://www.youtube.com/embed/ysy1o-QEj3k",
    category: "dsa",
    time: "32:55",
  },
  {
    id: "d75",
    title: "L73. Next Greater Element - II | Stack & Queue",
    url: "https://www.youtube.com/embed/If--3pm9K3U",
    category: "dsa",
    time: "20:03",
  },
  {
    id: "d76",
    title: "L74. Trapping Rainwater Problem | Optimal Solution & Code",
    url: "https://www.youtube.com/embed/UHHp8USwx4M",
    category: "dsa",
    time: "30:49",
  },
  {
    id: "d77",
    title: "L75. The Celebrity Problem | Stack & Queue",
    url: "https://www.youtube.com/embed/OZPmEA_8FM8",
    category: "dsa",
    time: "15:10",
  },
  {
    id: "d78",
    title: "L76. Implement LRU Cache | Linked List",
    url: "https://www.youtube.com/embed/GsY6y0iPaHw",
    category: "dsa",
    time: "35:33",
  },
  {
    id: "d79",
    title: "New Chapter : Queue Data Structure",
    url: "https://www.youtube.com/embed/Khf9v67Ya30",
    category: "dsa",
    time: "18:54",
  },
  {
    id: "d80",
    title: "L78. Circular Queue",
    url: "https://www.youtube.com/embed/4mKKolshFD0",
    category: "dsa",
    time: "18:36",
  },
  {
    id: "d81",
    title: "L79. Implement Queue using Stack & Stack using Queue",
    url: "https://www.youtube.com/embed/sFvP5Ois0CE",
    category: "dsa",
    time: "15:46",
  },
  {
    id: "d82",
    title: "First Unique Character in String | Easy - Leetcode387",
    url: "https://www.youtube.com/embed/sqyCBvEQN9c",
    category: "dsa",
    time: "13:22",
  },
  {
    id: "d83",
    title: "L81. Sliding Window Maximum | Queue",
    url: "https://www.youtube.com/embed/XwG5cozqfaM",
    category: "dsa",
    time: "31:21",
  },
  {
    id: "d84",
    title: "L82. Gas Station | Greedy Approach | Leetcode 134",
    url: "https://www.youtube.com/embed/SmTow5Ht4iU",
    category: "dsa",
    time: "22:15",
  },
  {
    id: "d85",
    title: "Binary Trees in Data Structures | Tree Traversal | DSA Placement Series",
    url: "https://www.youtube.com/embed/eKJrXBCRuNQ",
    category: "dsa",
    time: "01:14:14",
  },
  {
    id: "d86",
    title: "L.84 Height of a Binary Tree | Count of Nodes in a Binary Tree",
    url: "https://www.youtube.com/embed/7tzHzN_Ehus",
    category: "dsa",
    time: "23:08",
  },
  {
    id: "d87",
    title: "L.85 Identical Tree (same tree) | Subtree of another Tree",
    url: "https://www.youtube.com/embed/tumW7jsjv68",
    category: "dsa",
    time: "23:27",
  },
  {
    id: "d88",
    title: "L.86 Diameter of Binary Tree",
    url: "https://www.youtube.com/embed/aPyDPImR5UM",
    category: "dsa",
    time: "19:28",
  },
  {
    id: "d89",
    title: "Top View of a Binary Tree | DSA Series : L.87",
    url: "https://www.youtube.com/embed/FGr-syrhvOA",
    category: "dsa",
    time: "19:38",
  },
  {
    id: "d90",
    title: "Kth Level of a Binary Tree | DSA Series : L.88",
    url: "https://www.youtube.com/embed/ze4JO_ODl3w",
    category: "dsa",
    time: "07:58",
  },
  {
    id: "d91",
    title: "Lowest Common Ancestor in Binary Tree | DSA Series : L.89",
    url: "https://www.youtube.com/embed/oX5D0uKOMck",
    category: "dsa",
    time: "18:19",
  },
  {
    id: "d92",
    title: "Build Tree from Preorder & Inorder | DSA Series : L.90",
    url: "https://www.youtube.com/embed/33b1M980cCA",
    category: "dsa",
    time: "20:58",
  },
  {
    id: "d93",
    title: "Transform to Sum Tree | DSA Series : L.91",
    url: "https://www.youtube.com/embed/TY6kEejJEM0",
    category: "dsa",
    time: "08:40",
  },
  {
    id: "d94",
    title: "Binary Tree Paths | DSA Series : L.92",
    url: "https://www.youtube.com/embed/AWJD__CfM6A",
    category: "dsa",
    time: "10:00",
  },
  {
    id: "d95",
    title: "Maximum Width of Binary Tree | DSA Series : L.93",
    url: "https://www.youtube.com/embed/rhz-csskg_A",
    category: "dsa",
    time: "21:08",
  },
  {
    id: "d96",
    title: "Morris Inorder Traversal | DSA Series : L.94",
    url: "https://www.youtube.com/embed/PUfADhkq1LI",
    category: "dsa",
    time: "17:51",
  },
  {
    id: "d97",
    title: "Flatten Binary Tree to Linked List | DSA Series : L.95",
    url: "https://www.youtube.com/embed/dU2Z5HWSGM0",
    category: "dsa",
    time: "15:42",
  },
  {
    id: "d98",
    title: "Binary Search Trees (BSTs) | DSA Series : L.96",
    url: "https://www.youtube.com/embed/RuF7dPfj27Q",
    category: "dsa",
    time: "43:15",
  },
  {
    id: "d99",
    title: "Sorted Array to Balanced BST | DSA Series : L.97",
    url: "https://www.youtube.com/embed/0s6sCjs_4g0",
    category: "dsa",
    time: "08:43",
  },
  {
    id: "d100",
    title: "Validate Binary Search Tree | DSA Series : L.98",
    url: "https://www.youtube.com/embed/dSBcCynP1nA",
    category: "dsa",
    time: "12:40",
  },
];
export default DsaVideos;
